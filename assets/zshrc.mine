# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh

[[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh

# https://docs.brew.sh/Shell-Completion
if type brew &>/dev/null; then
  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH
autoload -Uz compinit
  compinit
fi

export EDITOR='nvim'
export VISUAL='nvim'
export PAGER='less'
export SHELL='/bin/zsh'
# Set the default Less options.
# Mouse-wheel scrolling has been disabled by -X (disable screen clearing).
# Remove -X and -F (exit if the content fits on one screen) to enable it.
export LESS='-g -i -M -R -S -w -z-4'

if [[ $(uname -m) == 'arm64' ]]; then
  test "$HOMEBREW_PREFIX" != '/opt/homebrew' && eval "$(/opt/homebrew/bin/brew shellenv)"
  # homebrew ruby
  if [[ ! "$PATH" == *"/opt/homebrew/opt/ruby/bin"* ]]; then
    export PATH="/opt/homebrew/opt/ruby/bin:$PATH"
  fi
else
  # homebrew ruby
  if [[ ! "$PATH" == *"/usr/local/opt/ruby/bin"* ]]; then
    export PATH="/usr/local/opt/ruby/bin:$PATH"
  fi
fi

# bat
export BAT_THEME=gruvbox-dark # Coldark-Dark

# Python
# https://github.com/pyenv/pyenv#installation
# export PYENV_ROOT="$HOME/.pyenv"
# export PATH="$PYENV_ROOT/bin:$PATH"
# eval "$(pyenv init --path)"
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

# Go
if [[ -x "$(which go)" ]]; then
  export GOPATH=$(go env GOPATH)
  if [[ ! "$PATH" == *"$GOPATH/bin"* ]]; then
    export PATH=$PATH:$GOPATH/bin
  fi
fi

# Volta.sh
export VOLTA_HOME="$HOME/.volta"
export PATH="$VOLTA_HOME/bin:$PATH"

# node
#export NODE_OPTIONS="--max-old-space-size=8192"

# fzf
export FZF_EXCLUDE=".git,node_modules,tmp,dist,build,concat-stats-for"
export FZF_DEFAULT_COMMAND="rg --files --no-ignore --hidden --follow -g \"!{$FZF_EXCLUDE}/*\" 2> /dev/null"
export FZF_DEFAULT_OPTS="--inline-info"

# Goto icloud address
alias icloud="cd ~/Library/Mobile\ Documents/com~apple~CloudDocs"

# Get IP address
# alias myip="ifconfig | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p'"

# git-extras
GIT_EXTRAS=/usr/local/opt/git-extras/share/git-extras/git-extras-completion.zsh
[ -s $GIT_EXTRAS ] && source $GIT_EXTRAS

# Git
alias g='git'
# Branch (b)
alias gba='git branch --all -vv' # If given twice, print the path of the linked worktree (if any) and the name of the upstream branch, as well
alias gbd='git branch --delete'
alias gbD='git branch --delete --force'
alias gbl='git --no-pager branch -vv'
# Log (l)
alias gl='git log --topo-order --pretty=format:"${_git_log_medium_format}"'
alias gls='git log --topo-order --stat --pretty=format:"${_git_log_medium_format}"'
alias gld='git log --topo-order --stat --patch --full-diff --pretty=format:"${_git_log_medium_format}"'
alias glg='git log --topo-order --all --graph --pretty=format:"${_git_log_oneline_format}"'
alias glc='git shortlog --summary --numbered'

# Wiki
alias wiki='cd ~/Library/Mobile\ Documents/iCloud\~md\~obsidian/Documents/Obsidian && nvim'

# https://github.com/ogham/exa
if [[ -x $(which exa) ]]; then
  alias l='exa'
  alias ll='exa --oneline --reverse --sort=size --long'
  alias la='ll --all'
  alias lh='la --header --git'
  alias lt='ll --long --tree -L'
fi

# https://sw.kovidgoyal.net/kitty/kittens/diff/
alias d="kitty +kitten diff"

# neovim
# alias vim="nvim"
alias n="nvim"

# Tips
# https://news.ycombinator.com/item?id=24083753
function readlines() {
  ncolors=
  function command_exists() {
      [ -n "$1" ] && type "$1" >/dev/null 2>&1
  }
  if command_exists tput; then
      ncolors=$(tput colors)
  fi
  if [ -t 1 ] && [ -n "$ncolors" ] && [ "$ncolors" -ge 8 ]; then
      RED="$(tput setaf 1)"
      GREEN="$(tput setaf 2)"
      YELLOW="$(tput setaf 3)"
      MAGENTA="$(tput setaf 5)"
      CYAN="$(tput setaf 6)"
      GRAY="$(tput setaf 8)"
      BOLD="$(tput bold)"
      NORMAL="$(tput sgr0)"
  else
      RED=""
      GREEN=""
      YELLOW=""
      MAGENTA=""
      CYAN=""
      GRAY=""
      BOLD=""
      NORMAL=""
  fi
  function echo_color() {
    local color="$1"
    printf "${color}$2${NORMAL}\n"
  }
  echo_color "${CYAN}" "c-f  Move forward"
  echo_color "${CYAN}" "c-b  Move backward"
  echo_color "${CYAN}" "c-p  Move up"
  echo_color "${CYAN}" "c-n  Move down"
  echo_color "${CYAN}" "c-a  Jump to beginning of line"
  echo_color "${CYAN}" "c-e  Jump to end of line"
  echo_color "${CYAN}" "c-d  Delete forward"
  echo_color "${CYAN}" "c-h  Delete backward"
  echo_color "${CYAN}" "c-k  Delete forward to end of line"
  echo_color "${CYAN}" "c-u  Delete entire line"
}
